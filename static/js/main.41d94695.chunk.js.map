{"version":3,"sources":["components/TodoList/TodoList.jsx","components/api/api.js","components/CurrentUser/CurrentUser.jsx","App.js","index.js"],"names":["TodoList","todos","selectUser","handleSelect","handleInputChange","changeStatus","filterByChoise","className","type","placeholder","onChange","event","target","value","map","todo","completed","key","id","checked","onClick","readOnly","title","userId","BASE_URL","getUser","fetch","then","response","json","result","data","CurrentUser","state","currentId","user","this","props","setState","clearUser","name","email","phone","website","createdAt","React","Component","App","selectedUserId","filterByInput","input","filter","filteredByTitle","preparedTodos","includes","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.41d94695.chunk.js","sourcesContent":["import React from 'react';\nimport './TodoList.scss';\nimport PropTypes from 'prop-types';\n\nexport const TodoList = ({\n  todos,\n  selectUser,\n  handleSelect,\n  handleInputChange,\n  changeStatus,\n  filterByChoise,\n}) => (\n  <div className=\"TodoList\">\n    <h2>Todos:</h2>\n\n    <div className=\"TodoList__container\">\n      <input\n        type=\"text\"\n        placeholder=\"Filter by word\"\n        className=\"TodoList__input\"\n        onChange={event => handleInputChange(event.target.value)}\n      />\n\n      <select\n        className=\"TodoList__select\"\n        value={filterByChoise}\n        onChange={handleSelect}\n      >\n        <option value=\"\">Choose filter</option>\n        <option value=\"all\">All</option>\n        <option value=\"active\">Active</option>\n        <option value=\"completed\">Completed</option>\n      </select>\n\n      <ul className=\"TodoList__list\">\n        {todos.map(todo => (\n          <li\n            className={todo.completed\n              ? 'TodoList__item TodoList__item--checked'\n              : 'TodoList__item TodoList__item--unchecked'\n            }\n            key={todo.id}\n          >\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={todo.completed}\n                onClick={() => changeStatus(todo.id)}\n                readOnly\n              />\n              {todo.title}\n            </label>\n\n            <button\n              className=\"TodoList__user-button\"\n              type=\"button\"\n              onClick={() => selectUser(todo.userId)}\n            >\n              {`User #${todo.userId}`}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  </div>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  selectUser: PropTypes.func.isRequired,\n  handleSelect: PropTypes.func.isRequired,\n  handleInputChange: PropTypes.func.isRequired,\n  changeStatus: PropTypes.func.isRequired,\n  filterByChoise: PropTypes.string.isRequired,\n};\n","const BASE_URL = 'https://mate-api.herokuapp.com';\n\nexport function getTodos() {\n  return fetch(`${BASE_URL}/todos`)\n    .then(response => response.json())\n    .then(result => result.data);\n}\n\nexport function getUser(userId) {\n  return fetch(`${BASE_URL}/users/${userId}/`)\n    .then(response => response.json())\n    .then(result => result.data);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getUser } from '../api/api';\nimport './CurrentUser.scss';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    currentId: 0,\n    user: {},\n  };\n\n  componentDidMount() {\n    getUser(this.props.userId)\n      .then((user) => {\n        if (!user) {\n          return;\n        }\n\n        this.setState({\n          currentId: this.props.userId,\n          user,\n        });\n      });\n  }\n\n  componentDidUpdate() {\n    if (this.props.userId === this.state.currentId) {\n      return;\n    }\n\n    getUser(this.props.userId)\n      .then((user) => {\n        if (!user) {\n          this.setState({\n            user: {},\n          });\n        } else {\n          this.setState({\n            currentId: this.props.userId,\n            user,\n          });\n        }\n      });\n  }\n\n  render() {\n    const { user } = this.state;\n    const { userId, clearUser } = this.props;\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__heading\">\n          {`Selected user: ${userId}`}\n        </h2>\n\n        <ul className=\"CurrentUser__list\">\n          <li className=\"CurrentUser__name\">\n            {!user.name ? 'No name' : user.name}\n          </li>\n          <li className=\"CurrentUser__email\">\n            {!user.email ? 'No email' : user.email}\n          </li>\n          <li className=\"CurrentUser__phone\">\n            {!user.phone ? 'No phone' : user.phone}\n          </li>\n          <li className=\"CurrentUser__website\">\n            {!user.website ? 'No website' : user.website}\n          </li>\n          <li className=\"CurrentUser__createdAt\">\n            {!user.createdAt ? 'No time when created' : user.createdAt}\n          </li>\n        </ul>\n        <button\n          type=\"button\"\n          className=\"CurrentUser__clear-user\"\n          onClick={() => clearUser()}\n        >\n          Clear user\n        </button>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  clearUser: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './components/api/api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n    filterByChoise: 'Choose filter',\n    filterByInput: '',\n  };\n\n  componentDidMount() {\n    getTodos()\n      .then((todos) => {\n        this.setState({\n          todos: todos.filter(todo => todo.title && todo.id && todo.userId),\n        });\n      });\n  }\n\n  handleSelect = (event) => {\n    this.setState({\n      filterByChoise: event.target.value,\n    });\n  }\n\n  handleInputChange = (input) => {\n    this.setState({\n      filterByInput: input,\n    });\n  }\n\n  clearUser = () => {\n    this.setState({\n      selectedUserId: 0,\n    });\n  }\n\n  selectUser = id => this.setState({ selectedUserId: id });\n\n  changeStatus = (id) => {\n    this.setState(state => ({\n      todos: state.todos.map((todo) => {\n        if (todo.id === +id) {\n          return {\n            ...todo,\n            completed: !todo.completed,\n          };\n        }\n\n        return { ...todo };\n      }),\n    }));\n  }\n\n  render() {\n    const { todos, filterByChoise, filterByInput, selectedUserId } = this.state;\n\n    let filteredByTitle;\n\n    if (filterByInput) {\n      filteredByTitle = todos.filter(todo => todo.title\n        && todo.title.includes(filterByInput));\n    } else {\n      filteredByTitle = todos;\n    }\n\n    let preparedTodos;\n\n    switch (filterByChoise) {\n      case 'completed':\n        preparedTodos = filteredByTitle\n          .filter(todo => todo.completed);\n        break;\n\n      case 'active':\n        preparedTodos = filteredByTitle\n          .filter(todo => !todo.completed);\n        break;\n\n      default:\n        preparedTodos = filteredByTitle;\n        break;\n    }\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          {this.state.todos.length}\n          <TodoList\n            todos={preparedTodos}\n            selectUser={this.selectUser}\n            handleSelect={this.handleSelect}\n            handleInputChange={this.handleInputChange}\n            changeStatus={this.changeStatus}\n            filterByChoise={filterByChoise}\n            filterByInput={filterByInput}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          {selectedUserId ? (\n            <CurrentUser\n              userId={selectedUserId}\n              clearUser={this.clearUser}\n            />\n          ) : (\n            'No user selected'\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}